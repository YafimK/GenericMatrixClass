fimak

		small:		big:
regular
	+	1.71e^-06	0.044037
	*	1.582e^-06	5.83132
multiThread
	+	0.000134	0.0647
	*	0.0001342	1.2982


we can see that the regular addition and the multithreaded are close but the regular addition
is faster.This probably due to the time needed for creation of diffrent additional vectors
needed for multithreading process. Versus the iteration time on each row in the 
regualr way. Both are pretty fast due to use of iterators which allow fast vector
item access especialy after implementing ROW iterators.

We can the diiffrance in the multiplication in the big file especially.Although the many
operations needed in order to run multithreaded multiplication - it's still faster.
This is due to the point that the multicore CPU has better capabilities to deal with 
vector multiplication in multithreading than in the regular especially due to memmory / 
cache and proccessing capabilities. 
I can assume it's related to the point that we are working with one matrix colum major and
therefore it's not squentaly ordered in the memory - and it increases the latency of the 
whole program.

